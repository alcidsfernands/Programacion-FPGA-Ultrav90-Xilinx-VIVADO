/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "xparameters.h"
#include "platform.h"
#include "xil_printf.h"
#include "xil_io.h"
#include "MY_IP_CONTADOR_21_22.h"
#include "MY_IP_FILTRO_21_22.h"
#include "MY_IP_HALL_21_22.h"
#include "MY_IP_STEPPER.h"
#include "MY_IP_HC_SR04.h"
#include "my_ip_temperatura.h"
#include "MYIP_MOTORDC_DIR.h"

#define MOTORDC_ADDRESS XPAR_MYIP_MOTORDC_DIR_0_S00_AXI_BASEADDR
#define CONT_ADDRESS XPAR_MY_IP_CONTADOR_21_22_0_S00_AXI_BASEADDR
#define FILTRO_ADDRESS XPAR_MY_IP_FILTRO_21_22_0_S00_AXI_BASEADDR
#define HALL_ADDRESS XPAR_MY_IP_HALL_21_22_0_S00_AXI_BASEADDR
#define DIST_ADDRESS XPAR_MY_IP_HCSR04_0_S00_AXI_BASEADDR
#define STEPPER_ADDRESS XPAR_MY_IP_STEPPER_0_S00_AXI_BASEADDR
#define TEMP_ADDRESS XPAR_MY_IP_TEMPERATURA_0_S00_AXI_BASEADDR
#define REG0 0
#define REG1 4
#define REG2 8
#define REG3 12
#define REG4 16



int main()
{
    init_platform();

    float valor_milimetros;
    int temp=0;

    printf("Hello World\n\r");

    MYIP_MOTORDC_DIR_mWriteReg(MOTORDC_ADDRESS, REG0, 1);
    MYIP_MOTORDC_DIR_mWriteReg(MOTORDC_ADDRESS, REG0, 0);
    MYIP_MOTORDC_DIR_mWriteReg(MOTORDC_ADDRESS, REG2, 200);
    MY_IP_HALL_21_22_mWriteReg(HALL_ADDRESS, REG0, 1);
    MY_IP_HALL_21_22_mWriteReg(HALL_ADDRESS, REG0, 0);
    MY_IP_STEPPER_mWriteReg(STEPPER_ADDRESS, REG1,0);

    while(1){
    	valor_milimetros = MY_IP_HC_SR04_mReadReg(DIST_ADDRESS, REG1);
    	printf("Distancia: %d",valor_milimetros);
    }
    MYIP_MOTORDC_DIR_mWriteReg(MOTORDC_ADDRESS, REG1, 50);
    cleanup_platform();
    return 0;
}
